{
    "summary": "Password reset function",
    "description": "password change",
    "tags": ["Users - Private"],
    "headers": {
        "type": "object",
        "required": ["Authorization"],
        "properties": {
            "Authorization": {
                "type": "string",
                "description": "Token given by loginr"
            },
            "storeId": {
                "type": "string",
                "description": "Id of store, only required if user_role as user"
            }
        },
        "example": {
            "storeId": "nKMHlkjhglkjG"
        }
    },
    "body": {
        "type": "object",
        "required": ["register_link", "new_password", "confirm_password"],
        "properties": {
            "register_link": {  "type": "string" },
            "new_password": {"type": "string" },
            "confirm_password": {  "type": "string"}
        },
        "example": {
            "register_link": "gkhjgajsgdfljkagsdfhjg",
            "new_password": "Default",
            "confirm_password": "Default"
        }
    },
    "response": {
        "200": {
            "description": "Succesful response",
            "type": "object",
            "properties": {
                "status": {"type": "string"},
                "user": {
                    "type": "object",
                    "properties": {
                        "key": {"type": "string", "description": "key used by internal system"},
                        "name": {"type": "string", "description": "Name of user"},
                        "role": {"type": "string", "enum": ["admin", "vendor", "seller", "user"], "description": "Role of user"},
                        "id": {"type": "string", "description": "current session id"},
                        "store_url": {"type": "string", "description": "url of seller store if role is seller. only for seller user"},
                        "store_id": {"type": "string", "description": "store_id of seller store if role is seller. only for seller user"},
                        "vendor": {"type": "string", "description": "Vendor name"}
                    }
                },
                "token": {"type": "string", "description": "token to be used by next command or request"}
            },
            "example": {
                "status": "ok",
                "user": {
                    "key": "test@powercommerce.asia_4_mustikaratu",
                    "name": "Juang",
                    "role": "seller",
                    "id": "1260980938640986709",
                    "store_url": "https://juang.rs.resellermustikaratu.com",
                    "store_id": "vGlkjghlknblihbnkj",
                    "vendor": "mustikaratu"
                },
                "token": "hladhflkjahsdf.kajshdflkjahsdlkjfhlakjhsdflkjahsdflkjahsdlfkjhalksjdfhlkajhhsdf"
            }
        },
        "401": {
            "description": "Unauthorized Error",
            "type": "object",
            "properties": {
                "status": {"type": "string", "description": "fail"},
                "name": {"type": "string", "description": "UnauthorizedError"},
                "message": {"type": "string", "description": "Error description"}
            },
            "example": {
                "status": "fail",
                "name": "UnauthorizedError",
                "message": "Password not match!"
            }
        },
        "404": {
            "description": "Notfound Error",
            "type": "object",
            "properties": {
                "status": {"type": "string", "description": "fail"},
                "name": {"type": "string", "description": "UnauthorizedError"},
                "message": {"type": "string", "description": "Error description"}
            },
            "example": {
                "status": "fail",
                "name": "NotFoundError",
                "message": "storeId: nKMHlkjhglkjG unknown!"
            }
        },
        "422": {
            "description": "Bad request, one or more param not included, or not match",
            "type": "object",
            "properties": {
                "status": {"type": "string", "description": "fail"},
                "name": {"type": "string", "description": "BadRequestError"},
                "message": {"type": "string", "description": "Error description"}
            },
            "example": {
                "status": "fail",
                "name": "BadRequestError",
                "message": "Missing storeId attribute!"
            }
        },
        "500": {
            "description": "Error on internal system",
            "type": "object",
            "properties": {
                "status": {"type": "string", "description": "fail"},
                "name": {"type": "string", "description": "InternalServerError"},
                "message": {"type": "string", "description": "Error description"}
            },
            "example": {
                "status": "fail",
                "name": "InternalServerError",
                "message": "Database error!"
            }
        }
    }
}
